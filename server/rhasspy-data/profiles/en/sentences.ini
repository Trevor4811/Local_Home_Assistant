[GetTime]
what time is it
tell me the time

[GetTemperature]
whats the temperature
how (hot | cold) is it

[GetGarageState]
is the garage door (open | closed)

[ChangeLightState]
light_name = ((living room lamp | garage light | wled) {name}) | <ChangeLightColor.light_name>
light_state = (on | off) {state}

turn <light_state> [the] <light_name>
turn [the] <light_name> <light_state>

[ChangeLightColor]
light_name = (bedroom light) {name}
color = (red | green | blue) {color}

set [the] <light_name> [to] <color>
make [the] <light_name> <color>

[GetTemperature]
whats the temperature
how (hot | cold) is it

[ChangeLightState]
light_name = ((living room lamp | garage light | wled) {name}) | <ChangeLightColor.light_name>
light_state = (on | off) {state}

turn <light_state> [the] <light_name>
turn [the] <light_name> <light_state>

[numbers]
one_to_nine = ((one | first):1 | (two | second):2 | (three | third):3 | (four | fourth):4 | (five | fifth) :5 | (six | sixth):6 | (seven | seventh | seventh):7 | (eight | eighth):8 | (nine | ninth):9)
ten_to_nineteen = ((ten | tenth):10 | (eleven | eleventh):11 | (twelve | twelfth):12 | (thirteen | thirteenth):13 | (fourteen | fourteenth):14 | (fifteen | fifteenth):15 | (sixteen | sixteenth):16 | (seventeen | seventeenth):17 | (eighteen | eighteenth):18 | (nineteen | nineteenth):19)
tens_to_ninety = ((twenty | twentieth):20 | (thirty | thirtieth):30 | (forty | fortieth):40 | (fifty | fiftieth):50 | (sixty | sixtieth):60 | (seventy | seventieth):70 | (eighty | eightieth):80 | (ninety | ninetieth):90)
one hundred_to_nine hundred = <one_to_nine> hundred
one_to_nineteen = (<one_to_nine> | <ten_to_nineteen>)
one_to_ninety_nine = (<one_to_nineteen> | [<one_to_nine> and] <tens_to_ninety>)

[time]
hour_half_expression = (<numbers.one_to_nine>{hour} and a half {minute:30})
hour_expression = (((<numbers.one_to_nine>){hour}) | <hour_half_expression>) (hour | hours)

minute_half_expression = (<numbers.one_to_ninety_nine>{minute} and a half minutes {second:30})
minute_expression = (((<numbers.one_to_ninety_nine>){minute}) | <minute_half_expression>)

second_expression = (((<numbers.one_to_ninety_nine>){second})) (second | seconds)

time_expression = ((<hour_expression> [[and] <minute_expression>] [[and] <second_expression>]) | (<minute_expression> [[and] <second_expression>]) | <second_expression>)

[SetTimer]
set [a] timer (on | for) <time.time_expression>
timer (on | for) <time.time_expression>

[LightOnWhen]
turn on the lights in <time.time_expression>
turn the lights on in <time.time_expression>

[LightOnFor]
turn on the lights for <time.time_expression>
turn the lights on for <time.time_expression>